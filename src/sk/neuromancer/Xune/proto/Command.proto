syntax = "proto3";

package sk.neuromancer.Xune.proto;

option java_outer_classname = "CommandProto";

import "sk/neuromancer/Xune/proto/Base.proto";

message CommandFly {
  Position from = 1;
  Position to = 2;
}

message CommandMove {
  Position from = 1;
  Position to = 2;
  Path points = 3;
  uint32 next = 4;
}

message CommandAttack {
  uint64 targetId = 1;
  bool keep = 2;
}

message CommandMoveAndAttack {
  CommandMove move = 1;
  CommandAttack attack = 2;
  uint64 targetId = 3;
  Position targetPos = 4;
}

message CommandFlyAndAttack {
  CommandFly move = 1;
  CommandAttack attack = 2;
  uint64 targetId = 3;
  Position targetPos = 4;
}

message CommandProduce {
  EntityClass resultClass = 1;
  float progress = 2;
  uint32 duration = 3;
  bool finished = 4;
}

message CommandCollectSpice {
  CommandMove move = 1;
  Tile target = 2;
}

message CommandDropOffSpice {
  CommandMove move = 1;
  uint64 targetId = 2;
}

message Command {
  bool started = 1;
  oneof cmd {
    CommandMove move = 2;
    CommandFly fly = 3;
    CommandAttack attack = 4;
    CommandMoveAndAttack moveAndAttack = 5;
    CommandFlyAndAttack flyAndAttack = 6;
    CommandProduce produce = 7;
    CommandCollectSpice collectSpice = 8;
    CommandDropOffSpice dropOffSpice = 9;
  }
}