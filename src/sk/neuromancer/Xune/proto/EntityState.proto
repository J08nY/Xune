syntax = "proto3";

package sk.neuromancer.Xune.proto;

option java_outer_classname = "EntityStateProto";

import "sk/neuromancer/Xune/proto/Base.proto";
import "sk/neuromancer/Xune/proto/Command.proto";

message EntityState {
  uint64 id = 1;
  EntityClass klass = 2;

  optional Position position = 3;
  optional Orientation orientation = 4;
  optional uint32 health = 5;

  message AttackingState {
    bool attacking = 1;
    uint64 targetId = 2;
  }

  message AttackedState {
    bool underAttack = 1;
    repeated uint64 attackerIds = 2;
  }

  optional AttackingState attackingState = 6;
  optional AttackedState attackedState = 7;
}

message PlayableEntityState {
  EntityState entity = 1;
  Flag flag = 2;
  uint64 ownerId = 3;
  repeated Command commands = 4;
}

message UnitState {
  PlayableEntityState playable = 1;
  optional uint32 ready = 2;
  optional bool immobile = 3;
}

message BuildingState {
  PlayableEntityState playable = 1;
  optional Tile tilePosition = 2;
}

message WormState {
  EntityState entity = 1;
  optional uint32 animation = 2;
  optional uint32 dir = 3;
  repeated Path plan = 4;
  optional Path current = 5;
  optional uint32 nextPoint = 6;
  optional float speed = 7;

  enum WormStatus {
    WANDERING = 0;
    HUNTING = 1;
    EATING = 2;
  }

  optional WormStatus status = 8;
  optional uint32 stateSince = 9;

  enum WormPosition {
    ABOVE = 0;
    BELOW = 1;
  }

  optional WormPosition position = 10;
  optional uint64 targetId = 11;
  optional float scale = 12;
}